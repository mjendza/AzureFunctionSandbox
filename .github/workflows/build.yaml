name: Build
env:
  OUTPUT_PATH: ${{ github.workspace }}/.output
  DOTNET_VERSION: "3.1.100"

on: [push]

jobs:
  vulnerability-scan:
    runs-on: ubuntu-latest
    name: scan-vulnerabilities
    container: mcr.microsoft.com/dotnet/core/sdk:3.1-bionic
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Scan for Vulnerabilities
      run: |
        dotnet tool restore
        dotnet restore

  build:
    runs-on: ubuntu-latest
    name: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - shell: bash
        run: |
          git fetch --prune --unshallow

      - name: Setup Dotnet ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: dotnet build
        shell: bash
        run: |
          dotnet build --configuration Release
      - name: Publish functions
        run: dotnet publish --configuration Release --output ${{ env.OUTPUT_PATH }}

      - name: Package functions
        uses: actions/upload-artifact@v1
        with:
          name: functions
          path: ${{ env.OUTPUT_PATH }}
  publish:
    needs: [vulnerability-scan, build]
    runs-on: ubuntu-latest
    name: publish nuget
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Get Version
      id: get_version
      run: | 
        echo "::set-output name=branch::${GITHUB_REF:10}"
        
        dotnet tool restore
        version=$(dotnet tool run minver -- --tag-prefix=v)
        echo "::set-output name=version::${version}"

    - name: Setup Dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Dotnet build to pack
      shell: bash
      run: |
        dotnet build "./AzureFunctions.AcceptanceTest.Runner/AzureFunctions.AcceptanceTest.Runner.csproj" --configuration=Release
        
    - name: Dotnet Pack
      shell: bash
      run: |
        dotnet pack "./AzureFunctions.AcceptanceTest.Runner/AzureFunctions.AcceptanceTest.Runner.csproj" -p:Version=${{ steps.get_version.outputs.version }} --configuration=Release --output=./packages
    - name: Publish Artifacts
      uses: actions/upload-artifact@v1
      with:
        path: packages
        name: nuget-packages
    - name: Dotnet Push to Nuget.org
      shell: bash
      run: |
        dotnet tool restore
        find . -name "*.nupkg" | xargs -n1 dotnet nuget push --api-key=${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json        
          
 