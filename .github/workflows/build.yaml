name: Build
env:
  OUTPUT_PATH: ${{ github.workspace }}/.output
  DOTNET_VERSION: "3.1.100"

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@master

      - name: Setup Dotnet ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Publish functions
        run: dotnet publish --configuration Release --output ${{ env.OUTPUT_PATH }}

      - name: Package functions
        uses: actions/upload-artifact@v1
        with:
          name: functions
          path: ${{ env.OUTPUT_PATH }}
  publish:
    needs: [build]
    runs-on: ubuntu-latest
    name: ci/github/publish
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Get Version
      id: get_version
      run: | 
        echo "::set-output name=branch::${GITHUB_REF:10}"
        
        dotnet tool restore
        version=$(dotnet tool run minver -- --tag-prefix=v)
        echo "::set-output name=version::${version}"
    - shell: bash
      run: |
        git fetch --prune --unshallow
    - name: Setup Dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Dotnet Pack
      shell: bash
      run: |
        dotnet pack /p:Version=${{ steps.get_version.outputs.version }} --configuration=Release --output=./packages \

    - name: Publish Artifacts
      uses: actions/upload-artifact@v1
      with:
        path: packages
        name: nuget-packages
    - name: Dotnet Push to Nuget.org
      shell: bash
      if: contains(steps.get_version.outputs.branch, 'v')
      run: |
        dotnet tool restore
        find . -name "*.nupkg" | xargs -n1 dotnet nuget push --api-key=${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json        
          
 